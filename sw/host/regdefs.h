////////////////////////////////////////////////////////////////////////////////
//
// Filename:	./regdefs.h
//
// Project:	VideoZip, a ZipCPU SoC supporting video functionality
//
// DO NOT EDIT THIS FILE!
// Computer Generated: This file is computer generated by AUTOFPGA. DO NOT EDIT.
// DO NOT EDIT THIS FILE!
//
// CmdLine:	../../../autofpga/trunk/sw/autofpga ../../../autofpga/trunk/sw/autofpga -o . global.txt bkram.txt buserr.txt clkcounter.txt clock.txt dlyarbiter.txt flash.txt gpio.txt icape.txt mdio.txt pic.txt pwrcount.txt rtcdate.txt rtcgps.txt spio.txt version.txt wbmouse.txt wboledbw.txt wbpmic.txt busconsole.txt zipmaster.txt gps.txt sdspi.txt
//
// Creator:	Dan Gisselquist, Ph.D.
//		Gisselquist Technology, LLC
//
////////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2017, Gisselquist Technology, LLC
//
// This program is free software (firmware): you can redistribute it and/or
// modify it under the terms of  the GNU General Public License as published
// by the Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
// target there if the PDF file isn't present.)  If not, see
// <http://www.gnu.org/licenses/> for a copy.
//
// License:	GPL, v3, as defined and found on www.gnu.org,
//		http://www.gnu.org/licenses/gpl.html
//
//
////////////////////////////////////////////////////////////////////////////////
//
//
#ifndef	REGDEFS_H
#define	REGDEFS_H


//
// The @REGDEFS.H.INCLUDE tag
//
// @REGDEFS.H.INCLUDE for masters
// @REGDEFS.H.INCLUDE for peripherals
// And finally any master REGDEFS.H.INCLUDE tags
// End of definitions from REGDEFS.H.INCLUDE


//
// Register address definitions, from @REGS.#d
//
#define	R_BUSERR        	0x00000400	// 00000400, wbregs names: BUSERR
#define	R_PIC           	0x00000404	// 00000404, wbregs names: PIC
#define	R_DATE          	0x00000408	// 00000408, wbregs names: RTCDATE, DATE
#define	R_GPIO          	0x0000040c	// 0000040c, wbregs names: GPIO, GPI, GPO
#define	PWCOUNT         	0x00000410	// 00000410, wbregs names: PWRCOUNT
#define	R_SPIO          	0x00000414	// 00000414, wbregs names: SPIO
// SYSCLK Clock Counter (measures clock speed)
#define	R_SYSCLK        	0x00000418	// 00000418, wbregs names: SYSCLK
#define	R_VERSION       	0x0000041c	// 0000041c, wbregs names: VERSION


// GPS clock tracker, control loop settings registers
#define	R_GPS_ALPHA     	0x00000480	// 00000480, wbregs names: ALPHA
#define	R_GPS_BETA      	0x00000484	// 00000480, wbregs names: BETA
#define	R_GPS_GAMMA     	0x00000488	// 00000480, wbregs names: GAMMA
#define	R_GPS_STEP      	0x0000048c	// 00000480, wbregs names: STEP
#define	R_MOUSE_STAT    	0x00000490	// 00000490, wbregs names: MSTAT
#define	R_MOUSE_RAW     	0x00000494	// 00000490, wbregs names: MRAW
#define	R_SCRN_MOUSE    	0x00000498	// 00000490, wbregs names: MOUSE
#define	R_SCRN_SIZE     	0x0000049c	// 00000490, wbregs names: MSIZ
#define	R_OLED_CMD      	0x000004a0	// 000004a0, wbregs names: OLED
#define	R_OLED_CDATA    	0x000004a4	// 000004a0, wbregs names: OLEDCA
#define	R_OLED_CDATB    	0x000004a8	// 000004a0, wbregs names: OLEDCB
#define	R_OLED_DATA     	0x000004ac	// 000004a0, wbregs names: ODATA
// RTC clock registers
#define	R_CLOCK         	0x000004b0	// 000004b0, wbregs names: CLOCK, TIMER
#define	R_TIMER         	0x000004b4	// 000004b0, wbregs names: TIMER
#define	R_STOPWATCH     	0x000004b8	// 000004b0, wbregs names: STOPWATCH
#define	R_CKALARM       	0x000004bc	// 000004b0, wbregs names: ALARM, CKALARM
// GPS clock test bench registers, for measuring the clock trackers performance
#define	R_GPSTB_FREQ    	0x000004c0	// 000004c0, wbregs names: GPSFREQ
#define	R_GPSTB_JUMP    	0x000004c4	// 000004c0, wbregs names: GPSJUMP
#define	R_GPSTB_ERRHI   	0x000004c8	// 000004c0, wbregs names: ERRHI
#define	R_GPSTB_ERRLO   	0x000004cc	// 000004c0, wbregs names: ERRLO
#define	R_GPSTB_COUNTHI 	0x000004d0	// 000004c0, wbregs names: CNTHI
#define	R_GPSTB_COUNTLO 	0x000004d4	// 000004c0, wbregs names: CNTLO
#define	R_GPSTB_STEPHI  	0x000004d8	// 000004c0, wbregs names: STEPHI
#define	R_GPSTB_STEPLO  	0x000004dc	// 000004c0, wbregs names: STEPLO


// WB-Microphone registers
#define	R_MIC_DATA      	0x00000500	// 00000500, wbregs names: MICD
#define	R_MIC_CTRL      	0x00000504	// 00000500, wbregs names: MICC
// SDSPI Debugging scope
#define	R_SDSPI_SCOPC   	0x00000508	// 00000508, wbregs names: SDSCOPC, SDSCOPE
#define	R_SDSPI_SCOPD   	0x0000050c	// 00000508, wbregs names: SDSCOPD
// FLASH erase/program configuration registers
#define	R_QSPI_EREG     	0x00000510	// 00000510, wbregs names: QSPIE
#define	R_QSPI_CREG     	0x00000514	// 00000510, wbregs names: QSPIC
#define	R_QSPI_SREG     	0x00000518	// 00000510, wbregs names: QSPIS
#define	R_QSPI_IDREG    	0x0000051c	// 00000510, wbregs names: QSPII
// GPS UART registers, similar to WBUART
#define	R_GPSU_SETUP    	0x00000520	// 00000520, wbregs names: GPSSETUP
#define	R_GPSU_FIFO     	0x00000524	// 00000520, wbregs names: GPSFIFO
#define	R_GPSU_UARTRX   	0x00000528	// 00000520, wbregs names: GPSRX
#define	R_GPSU_UARTTX   	0x0000052c	// 00000520, wbregs names: GPSTX
// SD-SPI addresses
#define	R_SDSPI_CTRL    	0x00000530	// 00000530, wbregs names: SDCARD
#define	R_SDSPI_DATA    	0x00000534	// 00000530, wbregs names: SDDATA
#define	R_SDSPI_FIFOA   	0x00000538	// 00000530, wbregs names: SDFIFOA, SDFIF0, SDFIFA
#define	R_SDSPI_FIFOB   	0x0000053c	// 00000530, wbregs names: SDFIFOB, SDFIF1, SDFIFB
// CONSOLE registers
#define	R_CONSOLE_FIFO  	0x00000544	// 00000540, wbregs names: UFIFO
#define	R_CONSOLE_UARTRX	0x00000548	// 00000540, wbregs names: RX
#define	R_CONSOLE_UARTTX	0x0000054c	// 00000540, wbregs names: TX
// FPGA CONFIG REGISTERS: 0x4e0-0x4ff
#define	R_CFG_CRC       	0x00000580	// 00000580, wbregs names: FPGACRC
#define	R_CFG_FAR       	0x00000584	// 00000580, wbregs names: FPGAFAR
#define	R_CFG_FDRI      	0x00000588	// 00000580, wbregs names: FPGAFDRI
#define	R_CFG_FDRO      	0x0000058c	// 00000580, wbregs names: FPGAFDRO
#define	R_CFG_CMD       	0x00000590	// 00000580, wbregs names: FPGACMD
#define	R_CFG_CTL0      	0x00000594	// 00000580, wbregs names: FPGACTL0
#define	R_CFG_MASK      	0x00000598	// 00000580, wbregs names: FPGAMASK
#define	R_CFG_STAT      	0x0000059c	// 00000580, wbregs names: FPGASTAT
#define	R_CFG_LOUT      	0x000005a0	// 00000580, wbregs names: FPGALOUT
#define	R_CFG_COR0      	0x000005a4	// 00000580, wbregs names: FPGACOR0
#define	R_CFG_MFWR      	0x000005a8	// 00000580, wbregs names: FPGAMFWR
#define	R_CFG_CBC       	0x000005ac	// 00000580, wbregs names: FPGACBC
#define	R_CFG_IDCODE    	0x000005b0	// 00000580, wbregs names: FPGAIDCODE
#define	R_CFG_AXSS      	0x000005b4	// 00000580, wbregs names: FPGAAXSS
#define	R_CFG_COR1      	0x000005b8	// 00000580, wbregs names: FPGACOR1
#define	R_CFG_WBSTAR    	0x000005c0	// 00000580, wbregs names: WBSTAR
#define	R_CFG_TIMER     	0x000005c4	// 00000580, wbregs names: CFGTIMER
#define	R_CFG_BOOTSTS   	0x000005d8	// 00000580, wbregs names: BOOTSTS
#define	R_CFG_CTL1      	0x000005e0	// 00000580, wbregs names: FPGACTL1
#define	R_CFG_BSPI      	0x000005fc	// 00000580, wbregs names: FPGABSPI
// Ethernet configuration (MDIO) port
#define	R_MDIO_BMCR     	0x00000600	// 00000600, wbregs names: BMCR
#define	R_MDIO_BMSR     	0x00000604	// 00000600, wbregs names: BMSR
#define	R_MDIO_PHYIDR1  	0x00000608	// 00000600, wbregs names: PHYIDR1
#define	R_MDIO_PHYIDR2  	0x0000060c	// 00000600, wbregs names: PHYIDR2
#define	R_MDIO_ANAR     	0x00000610	// 00000600, wbregs names: ANAR
#define	R_MDIO_ANLPAR   	0x00000614	// 00000600, wbregs names: ANLPAR
#define	R_MDIO_ANER     	0x00000618	// 00000600, wbregs names: ANER
#define	R_MDIO_ANNPTR   	0x0000061c	// 00000600, wbregs names: ANNPTR
#define	R_MDIO_PHYSTS   	0x00000640	// 00000600, wbregs names: PHYSYTS
#define	R_MDIO_FCSCR    	0x00000650	// 00000600, wbregs names: FCSCR
#define	R_MDIO_RECR     	0x00000654	// 00000600, wbregs names: RECR
#define	R_MDIO_PCSR     	0x00000658	// 00000600, wbregs names: PCSR
#define	R_MDIO_RBR      	0x0000065c	// 00000600, wbregs names: RBR
#define	R_MDIO_LEDCR    	0x00000660	// 00000600, wbregs names: LEDCR
#define	R_MDIO_PHYCR    	0x00000664	// 00000600, wbregs names: PHYCR
#define	R_MDIO_BTSCR    	0x00000668	// 00000600, wbregs names: BTSCR
#define	R_MDIO_CDCTRL   	0x0000066c	// 00000600, wbregs names: CDCTRL
#define	R_MDIO_EDCR     	0x00000674	// 00000600, wbregs names: EDCR
#define	BKRAM           	0x00100000	// 00100000, wbregs names: RAM
#define	FLASHMEM        	0x01000000	// 01000000, wbregs names: FLASH


//
// The @REGDEFS.H.DEFNS tag
//
// @REGDEFS.H.DEFNS for masters
#define	R_ZIPCTRL	0x80000000
#define	R_ZIPDATA	0x80000004
#define	RESET_ADDRESS	0x01400000
#define	CLKFREQHZ	100000000
// @REGDEFS.H.DEFNS for peripherals
#define	FLASHBASE	16777216
#define	FLASHLEN	0x01000000
#define	FLASHLGLEN	24
#define	BKRAMBASE	1048576
#define	BKRAMLEN	0x00100000
// @REGDEFS.H.DEFNS at the top level
// End of definitions from REGDEFS.H.DEFNS
//
// The @REGDEFS.H.INSERT tag
//
// @REGDEFS.H.INSERT for masters

#define	CPU_GO		0x0000
#define	CPU_RESET	0x0040
#define	CPU_INT		0x0080
#define	CPU_STEP	0x0100
#define	CPU_STALL	0x0200
#define	CPU_HALT	0x0400
#define	CPU_CLRCACHE	0x0800
#define	CPU_sR0		0x0000
#define	CPU_sSP		0x000d
#define	CPU_sCC		0x000e
#define	CPU_sPC		0x000f
#define	CPU_uR0		0x0010
#define	CPU_uSP		0x001d
#define	CPU_uCC		0x001e
#define	CPU_uPC		0x001f


// @REGDEFS.H.INSERT for peripherals
// Flash control constants
#define	ERASEFLAG	0x80000000
#define	DISABLEWP	0x10000000
#define	ENABLEWP	0x00000000

#define	SZPAGEB		256
#define	PGLENB		256
#define	SZPAGEW		64
#define	PGLENW		64
#define	NPAGES		256
#define	SECTORSZB	(NPAGES * SZPAGEB)	// In bytes, not words!!
#define	SECTORSZW	(NPAGES * SZPAGEW)	// In words
#define	NSECTORS	64
#define	SECTOROF(A)	((A) & (-1<<16))
#define	SUBSECTOROF(A)	((A) & (-1<<12))
#define	PAGEOF(A)	((A) & (-1<<8))


#define	R_ICONTROL	R_PIC
#define	ISPIF_EN	0x80020002
#define	ISPIF_DIS	0x00020002
#define	ISPIF_CLR	0x00000002
// @REGDEFS.H.INSERT from the top level
typedef	struct {
	unsigned	m_addr;
	const char	*m_name;
} REGNAME;

extern	const	REGNAME	*bregs;
extern	const	int	NREGS;
// #define	NREGS	(sizeof(bregs)/sizeof(bregs[0]))

extern	unsigned	addrdecode(const char *v);
extern	const	char *addrname(const unsigned v);
// End of definitions from REGDEFS.H.INSERT


#endif	// REGDEFS_H
